local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character
local humanoid = character and character:FindFirstChild("Humanoid")
local camera = workspace.CurrentCamera

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UltimateAngularSuite"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Mobile detection and optimized sizing
local isMobile = UserInputService.TouchEnabled

local mainFrame = Instance.new("Frame")
mainFrame.Size = isMobile and UDim2.new(0.8, 0, 0.85, 0) or UDim2.new(0, 500, 0, 600)  -- Wider but taller on mobile
mainFrame.Position = isMobile and UDim2.new(0.1, 0, 0.075, 0) or UDim2.new(0.5, -250, 0.5, -300)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Active = true
mainFrame.Draggable = true

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, isMobile and 30 or 35)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 50)
title.BorderSizePixel = 0
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = isMobile and 12 or 16
title.Text = "ANGULAR SUITE"
title.Parent = mainFrame

-- Tab Container
local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(1, 0, 0, isMobile and 28 or 32)
tabContainer.Position = UDim2.new(0, 0, 0, isMobile and 30 or 35)
tabContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
tabContainer.BorderSizePixel = 0
tabContainer.Parent = mainFrame

local tabScroller = Instance.new("ScrollingFrame")
tabScroller.Size = UDim2.new(1, 0, 1, 0)
tabScroller.BackgroundTransparency = 1
tabScroller.CanvasSize = UDim2.new(3, 0, 0, 0)
tabScroller.ScrollBarThickness = isMobile and 5 or 4
tabScroller.ScrollingDirection = Enum.ScrollingDirection.X
tabScroller.Parent = tabContainer

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -10, 1, -(isMobile and 68 or 75))
contentFrame.Position = UDim2.new(0, 5, 0, isMobile and 63 or 72)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- All 13 Tabs but with mobile-optimized names
local tabs = {
    "Move", "Combat", "Tech", "Physics", "Fun", 
    "Auto", "Visual", "Stealth", "Presets", "Game", "AI", "Exp", "Settings"
}

local tabButtons = {}
local currentTab = "Move"

-- Create Mobile-Optimized Tab Buttons
for i, tabName in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(0, isMobile and 55 or 70, 1, 0)
    tabButton.Position = UDim2.new(0, (i-1)*(isMobile and 57 or 72), 0, 0)
    tabButton.BackgroundColor3 = tabName == "Move" and Color3.fromRGB(60, 60, 100) or Color3.fromRGB(40, 40, 40)
    tabButton.BorderSizePixel = 0
    tabButton.TextColor3 = Color3.new(1, 1, 1)
    tabButton.Font = Enum.Font.SourceSans
    tabButton.TextSize = isMobile and 9 or 10
    tabButton.Text = tabName
    tabButton.Parent = tabScroller
    
    tabButton.MouseButton1Click:Connect(function()
        currentTab = tabName
        updateTabDisplay()
    end)
    
    tabButtons[tabName] = tabButton
end
tabScroller.CanvasSize = UDim2.new(0, #tabs * (isMobile and 57 or 72), 0, 0)

-- Control Section (Compact for mobile)
local controlFrame = Instance.new("Frame")
controlFrame.Size = UDim2.new(1, 0, 0, isMobile and 45 or 50)
controlFrame.Position = UDim2.new(0, 0, 0, 0)
controlFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 65)
controlFrame.BorderSizePixel = 0
controlFrame.Parent = contentFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.5, -5, 0.7, 0)
toggleButton.Position = UDim2.new(0, 5, 0.15, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.BorderSizePixel = 0
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = isMobile and 11 or 13
toggleButton.Text = "ACTIVATE"
toggleButton.Parent = controlFrame

local modeLabel = Instance.new("TextLabel")
modeLabel.Size = UDim2.new(0.5, -5, 0.7, 0)
modeLabel.Position = UDim2.new(0.5, 5, 0.15, 0)
modeLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 85)
modeLabel.BorderSizePixel = 0
modeLabel.TextColor3 = Color3.new(1, 1, 1)
modeLabel.Font = Enum.Font.SourceSans
modeLabel.TextSize = isMobile and 8 or 10
modeLabel.TextWrapped = true
modeLabel.Text = "Forward Boost"
modeLabel.Parent = controlFrame

-- Stats Display (Smaller on mobile)
local statsLabel = Instance.new("TextLabel")
statsLabel.Size = UDim2.new(1, -10, 0, isMobile and 12 or 15)
statsLabel.Position = UDim2.new(0, 5, 0.8, 0)
statsLabel.BackgroundTransparency = 1
statsLabel.TextColor3 = Color3.new(0.8, 0.8, 1)
statsLabel.Font = Enum.Font.SourceSans
statsLabel.TextSize = isMobile and 7 or 8
statsLabel.Text = "Ready"
statsLabel.Parent = controlFrame

-- FIXED CONTENT SCROLLING FRAME (More height for mobile)
local contentScrolling = Instance.new("ScrollingFrame")
contentScrolling.Size = UDim2.new(1, 0, 1, -(isMobile and 50 or 55))
contentScrolling.Position = UDim2.new(0, 0, 0, isMobile and 50 or 55)
contentScrolling.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
contentScrolling.BorderSizePixel = 0
contentScrolling.ScrollBarThickness = isMobile and 8 or 10
contentScrolling.ScrollingEnabled = true
contentScrolling.VerticalScrollBarInset = Enum.ScrollBarInset.Always
contentScrolling.Parent = contentFrame

-- Mobile scrolling optimization
if isMobile then
    contentScrolling.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 150)
end

-- ALL 195 MODES (Keeping all features but with mobile-optimized display)
local modes = {
    -- Movement (50 modes)
    {"Forward Boost", Vector3.new(0, 100, 0), "Basic forward"},
    {"Turbo Forward", Vector3.new(0, 150, 0), "Fast forward"},
    {"Backward Boost", Vector3.new(0, -100, 0), "Reverse move"},
    {"Right Boost", Vector3.new(0, 0, -100), "Move right"},
    {"Left Boost", Vector3.new(0, 0, 100), "Move left"},
    {"Upward Boost", Vector3.new(100, 0, 0), "Move up"},
    {"Warp Forward", Vector3.new(0, 200, 50), "Extreme speed"},
    {"Aerial Control", Vector3.new(25, 80, 25), "Air movement"},
    {"Momentum Keep", Vector3.new(0, 120, 0), "Keep speed"},
    {"Slope Boost", Vector3.new(0, 100, -20), "Downhill help"},
    {"Quick Turn", Vector3.new(0, 0, 120), "Fast turn"},
    {"Wall Run", Vector3.new(60, 80, 0), "Wall movement"},
    {"Water Jet", Vector3.new(0, 100, 0), "Water boost"},
    {"Soft Landing", Vector3.new(-50, 0, 0), "Less fall damage"},
    {"Bunny Hop", Vector3.new(0, 130, 0), "Jump chain"},
    {"Speed Flip", Vector3.new(100, 100, 100), "Advanced move"},
    {"Slide Master", Vector3.new(0, 90, 0), "Better sliding"},
    {"Precision Move", Vector3.new(10, 30, 10), "Fine control"},
    {"Drift Assist", Vector3.new(0, 0, -80), "Cornering"},
    {"Velocity Lock", Vector3.new(0, 80, 0), "Keep velocity"},
    {"Quantum Step", Vector3.new(0, 140, 0), "Advanced boost"},
    {"Spiral Boost", Vector3.new(50, 50, 50), "Spin move"},
    {"Diagonal Boost", Vector3.new(30, 100, -30), "Angle move"},
    {"Racing Start", Vector3.new(0, 180, 0), "Quick start"},
    {"Speed Maintain", Vector3.new(0, 60, 0), "Constant speed"},
    {"Wall Jump", Vector3.new(60, 100, 0), "Wall kick"},
    {"Crouch Slide", Vector3.new(0, 110, 0), "Low slide"},
    {"Zipline", Vector3.new(0, 160, 0), "Straight line"},
    {"Curve Master", Vector3.new(0, 0, -90), "Curved path"},
    {"Backwards Race", Vector3.new(0, -140, 0), "Reverse run"},
    {"Sideways Sprint", Vector3.new(0, 0, -130), "Side run"},
    {"Upward Sprint", Vector3.new(140, 0, 0), "Fast up"},
    {"Downward Dive", Vector3.new(-80, 0, 0), "Fast down"},
    {"Circle Strafe", Vector3.new(0, 0, 110), "Orbit move"},
    {"Figure Eight", Vector3.new(50, 100, -50), "Pattern move"},
    {"Spiral Stair", Vector3.new(60, 70, 60), "Spin up"},
    {"Wave Motion", Vector3.new(40, 120, 40), "Wave move"},
    {"Teleport Dodge", Vector3.new(0, 200, 0), "Fast dodge"},
    {"Momentum Shift", Vector3.new(0, 160, 0), "Speed change"},
    {"Gravity Run", Vector3.new(0, 130, 0), "Low G run"},
    {"Speed Tunnel", Vector3.new(0, 180, 0), "Focus speed"},
    {"Phase Walk", Vector3.new(0, 170, 0), "Partial phase"},
    {"Time Walk", Vector3.new(0, 190, 0), "Time move"},
    {"Shadow Step", Vector3.new(0, 160, 0), "Short teleport"},
    {"Dimensional Hop", Vector3.new(100, 100, 100), "Multi-plane"},
    {"Reality Skip", Vector3.new(0, 280, 0), "Brief pause"},
    {"Chrono Sprint", Vector3.new(0, 200, 0), "Time run"},
    {"Quantum Dash", Vector3.new(0, 260, 0), "Particle move"},
    {"Neo Forward", Vector3.new(0, 150, 0), "Advanced forward"},
    {"Hyper Turbo", Vector3.new(0, 250, 0), "Extreme speed"},

    -- Combat (40 modes)
    {"Matrix Dodge", Vector3.new(0, 0, 180), "Slow dodge"},
    {"Ninja Vanish", Vector3.new(0, 0, -180), "Fast disappear"},
    {"Tactical Retreat", Vector3.new(0, -150, 0), "Smart back"},
    {"Aggressive Assault", Vector3.new(0, 160, 0), "Attack charge"},
    {"Sword Master", Vector3.new(0, 100, 0), "Blade boost"},
    {"Gun Fu", Vector3.new(0, -80, 0), "Recoil move"},
    {"Combat Flip", Vector3.new(90, 80, 0), "Air combat"},
    {"Quick Draw", Vector3.new(0, 0, 140), "Fast position"},
    {"Tactical Roll", Vector3.new(0, 0, -140), "Combat dodge"},
    {"Power Lunge", Vector3.new(0, 170, 0), "Strong charge"},
    {"Weapon Art", Vector3.new(60, 100, -60), "Special move"},
    {"Stun Break", Vector3.new(120, 120, 120), "Escape stun"},
    {"Target Lock", Vector3.new(0, 130, 0), "Auto follow"},
    {"Aerial Dominance", Vector3.new(70, 90, 0), "Air control"},
    {"Counter Strike", Vector3.new(0, 0, -160), "Parry follow"},
    {"Stealth Kill", Vector3.new(0, 140, 0), "Silent approach"},
    {"Berserker", Vector3.new(0, 180, 0), "Rage mode"},
    {"Sniper Reposition", Vector3.new(0, 0, 130), "Sniper move"},
    {"Tank Charge", Vector3.new(0, 150, 0), "Heavy rush"},
    {"Assassin Vanish", Vector3.new(0, 0, 170), "Stealth escape"},
    {"Paladin Charge", Vector3.new(0, 140, 0), "Holy advance"},
    {"Mage Teleport", Vector3.new(0, 200, 0), "Magic move"},
    {"Rogue Vault", Vector3.new(80, 100, 0), "Acrobatic"},
    {"Combo Extender", Vector3.new(50, 80, 0), "Attack chain"},
    {"Finisher Move", Vector3.new(0, 160, 0), "Kill setup"},
    {"Taunt Dodge", Vector3.new(0, 0, -150), "Mock dodge"},
    {"Feint Step", Vector3.new(0, 0, 120), "Fake move"},
    {"Perfect Block", Vector3.new(0, -120, 0), "Defense move"},
    {"Rage Dash", Vector3.new(0, 190, 0), "Angry charge"},
    {"Calm Retreat", Vector3.new(0, -130, 0), "Peaceful back"},
    {"War Cry", Vector3.new(0, 170, 0), "Scary advance"},
    {"Silent Step", Vector3.new(0, 110, 0), "Quiet move"},
    {"Battle Meditation", Vector3.new(0, 100, 0), "Focus mode"},
    {"Weapon Throw", Vector3.new(0, 140, 0), "Throw boost"},
    {"Shield Bash", Vector3.new(0, 130, 0), "Defense attack"},
    {"Dual Wield", Vector3.new(40, 90, -40), "Two weapons"},
    {"Magic Circle", Vector3.new(60, 60, 60), "Arcane form"},
    {"Holy Ground", Vector3.new(0, 120, 0), "Sacred move"},
    {"Cursed Step", Vector3.new(0, 0, -130), "Hex dodge"},
    {"Final Flash", Vector3.new(0, 300, 0), "Ultimate move"},

    -- Technical (35 modes)
    {"Quantum Precision", Vector3.new(15, 40, 15), "Exact control"},
    {"Wall Climb Pro", Vector3.new(80, 60, 0), "Expert climb"},
    {"Momentum Engine", Vector3.new(30, 150, -30), "Speed chain"},
    {"Gravity Defiance", Vector3.new(100, 0, 0), "Anti-gravity"},
    {"Quantum Tunnel", Vector3.new(250, 0, 0), "Phase matter"},
    {"Super Elastic", Vector3.new(0, 130, 0), "Better bounce"},
    {"Velocity God", Vector3.new(0, 200, 0), "Speed master"},
    {"Surface Genius", Vector3.new(50, 100, 0), "Smart terrain"},
    {"Impact Converter", Vector3.new(0, 140, 0), "Hit to energy"},
    {"Time Master", Vector3.new(0, 70, 0), "Time control"},
    {"Friction God", Vector3.new(0, 90, 0), "Surface master"},
    {"Build Master", Vector3.new(0, 80, 0), "Build faster"},
    {"Network God", Vector3.new(0, 110, 0), "Lag fix"},
    {"Memory Master", Vector3.new(0, 50, 0), "Save memory"},
    {"Detection Ghost", Vector3.new(0, 120, 0), "Avoid detection"},
    {"Quantum Lock", Vector3.new(0, 160, 0), "Stay in place"},
    {"Phase Shift", Vector3.new(200, 0, 0), "Reality phase"},
    {"Time Skip", Vector3.new(0, 180, 0), "Jump time"},
    {"Dimensional Fold", Vector3.new(150, 150, 150), "Space compress"},
    {"Reality Anchor", Vector3.new(0, 140, 0), "Stay real"},
    {"Quantum Entangle", Vector3.new(100, 100, 100), "Multi-state"},
    {"Chrono Loop", Vector3.new(0, 130, 0), "Time cycle"},
    {"Parallel Walk", Vector3.new(0, 170, 0), "Alt reality"},
    {"Void Step", Vector3.new(0, 190, 0), "Nothing move"},
    {"Light Speed", Vector3.new(0, 400, 0), "Super fast"},
    {"Wormhole", Vector3.new(300, 0, 0), "Space shortcut"},
    {"Quantum Leap", Vector3.new(0, 220, 0), "State change"},
    {"Reality Warp", Vector3.new(200, 200, 200), "Change physics"},
    {"Time Dilation", Vector3.new(0, 90, 0), "Slow time"},
    {"Space Bend", Vector3.new(180, 180, 180), "Bend space"},
    {"Quantum Superposition", Vector3.new(120, 120, 120), "Multi-location"},
    {"Chrono Break", Vector3.new(0, 240, 0), "Break time"},
    {"Dimension Hop", Vector3.new(160, 160, 160), "Reality jump"},
    {"Void Walk", Vector3.new(0, 200, 0), "Walk nothing"},
    {"Infinity Step", Vector3.new(0, 280, 0), "Endless move"},

    -- Physics (30 modes)
    {"Gravity Master", Vector3.new(0, 0, 0), "Control gravity"},
    {"Kinetic God", Vector3.new(0, 180, 0), "Energy master"},
    {"Time Lord", Vector3.new(0, 70, 0), "Time ruler"},
    {"Friction Void", Vector3.new(0, 100, 0), "No friction"},
    {"Dimension Lord", Vector3.new(220, 220, 220), "Reality ruler"},
    {"Universe Breaker", Vector3.new(1500, 1500, 1500), "Max power"},
    {"Object God", Vector3.new(180, 180, 180), "Control objects"},
    {"Gravity Field", Vector3.new(0, -80, 0), "Create gravity"},
    {"Elastic Universe", Vector3.new(0, 120, 0), "Bounce world"},
    {"Magnetic God", Vector3.new(0, 0, 150), "Control magnets"},
    {"Vacuum Master", Vector3.new(0, 0, 0), "Create vacuum"},
    {"Quantum Field", Vector3.new(100, 100, 100), "Particle control"},
    {"Force Master", Vector3.new(0, 160, 0), "Control forces"},
    {"Space-Time", Vector3.new(200, 200, 200), "Control space-time"},
    {"Reality Matrix", Vector3.new(180, 180, 180), "Program reality"},
    {"Quantum Foam", Vector3.new(140, 140, 140), "Space control"},
    {"Chrono Field", Vector3.new(0, 110, 0), "Time field"},
    {"Dimensional Gate", Vector3.new(240, 240, 240), "Make portal"},
    {"Gravity Wave", Vector3.new(0, -70, 0), "Gravity ripple"},
    {"Magnetic Storm", Vector3.new(0, 0, 180), "Area magnet"},
    {"Vacuum Collapse", Vector3.new(0, 0, 0), "Implosion"},
    {"Quantum Storm", Vector3.new(160, 160, 160), "Particle storm"},
    {"Force Hurricane", Vector3.new(0, 190, 0), "Energy storm"},
    {"Space Rift", Vector3.new(220, 220, 220), "Space tear"},
    {"Reality Crash", Vector3.new(1200, 1200, 1200), "System overload"},
    {"Quantum Singularity", Vector3.new(400, 400, 400), "Dense point"},
    {"Chrono Vortex", Vector3.new(0, 130, 0), "Time whirlpool"},
    {"Dimension Storm", Vector3.new(180, 180, 180), "Reality storm"},
    {"Gravity Singularity", Vector3.new(0, -100, 0), "Black hole"},
    {"Final Physics", Vector3.new(2000, 2000, 2000), "Ultimate control"},

    -- Fun (40 modes)
    {"Helicopter God", Vector3.new(0, 400, 0), "Perfect hover"},
    {"Ragdoll Master", Vector3.new(300, 300, 300), "Launch control"},
    {"Dance Revolution", Vector3.new(120, 200, 120), "Rhythm moves"},
    {"Player Sports", Vector3.new(0, 180, 0), "Player control"},
    {"Chaos God", Vector3.new(math.random(-300,300), math.random(-300,300), math.random(-300,300)), "Total random"},
    {"OVERDRIVE MAX", Vector3.new(350, 450, 350), "Max fun"},
    {"Party Master", Vector3.new(100, 180, 100), "Ultimate fun"},
    {"UFO Master", Vector3.new(80, 140, 80), "Alien craft"},
    {"Bounce Universe", Vector3.new(0, 150, 0), "Endless bounce"},
    {"Tornado God", Vector3.new(150, 250, 150), "Perfect storm"},
    {"Rocket Master", Vector3.new(0, 300, 0), "Launch control"},
    {"Pinball Wizard", Vector3.new(140, 0, 140), "Bounce physics"},
    {"Zero G Master", Vector3.new(90, 0, 90), "Weightless"},
    {"Super Bounce Pro", Vector3.new(0, 220, 0), "High jump"},
    {"Cartoon God", Vector3.new(200, 200, 200), "Animation physics"},
    {"Rubber Man", Vector3.new(0, 170, 0), "Elastic body"},
    {"Ice Skater", Vector3.new(0, 110, 0), "Perfect slide"},
    {"Moon Walker", Vector3.new(0, 130, 0), "Low G dance"},
    {"Breakdance God", Vector3.new(140, 240, 140), "Best dance"},
    {"Parkour Master", Vector3.new(80, 160, 80), "Free running"},
    {"Ninja Warrior", Vector3.new(100, 180, 100), "Obstacle pro"},
    {"Super Hero", Vector3.new(0, 250, 0), "Comic physics"},
    {"Villain Mode", Vector3.new(0, 0, -180), "Evil moves"},
    {"Angel Flight", Vector3.new(0, 280, 0), "Divine flight"},
    {"Demon Dash", Vector3.new(0, 190, 0), "Evil speed"},
    {"Robot Dance", Vector3.new(80, 120, 80), "Mechanical"},
    {"Alien Abduction", Vector3.new(0, 320, 0), "UFO beam"},
    {"Time Traveler", Vector3.new(0, 200, 0), "Time sightsee"},
    {"Space Explorer", Vector3.new(120, 120, 120), "Space journey"},
    {"Deep Sea", Vector3.new(0, 90, 0), "Underwater"},
    {"Jungle Swing", Vector3.new(0, 160, 0), "Tarzan move"},
    {"Wild West", Vector3.new(0, 140, 0), "Cowboy adventure"},
    {"Medieval Knight", Vector3.new(0, 130, 0), "Castle explore"},
    {"Future City", Vector3.new(0, 180, 0), "Cyberpunk move"},
    {"Fantasy World", Vector3.new(100, 150, 100), "Magic realm"},
    {"Sci-Fi Mode", Vector3.new(0, 220, 0), "Sci-fi physics"},
    {"Horror Escape", Vector3.new(0, 190, 0), "Monster chase"},
    {"Comedy Mode", Vector3.new(150, 150, 150), "Slapstick"},
    {"Romance Mode", Vector3.new(0, 120, 0), "Graceful move"},
    {"Epic Adventure", Vector3.new(0, 170, 0), "Grand journey"},
}

-- Mode ranges for each tab
local modeRanges = {
    ["Move"] = {1, 50},
    ["Combat"] = {51, 90},
    ["Tech"] = {91, 125},
    ["Physics"] = {126, 155},
    ["Fun"] = {156, 195}
}

-- Helper Functions with Mobile Optimization
function createModeButton(parent, index, mode, yPos, color)
    local buttonHeight = isMobile and 25 or 30
    local descHeight = isMobile and 12 or 16
    local spacing = isMobile and 40 or 50
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, buttonHeight)
    button.Position = UDim2.new(0, 5, 0, yPos)
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.SourceSans
    button.TextSize = isMobile and 8 or 10
    button.Text = mode[1]
    button.Parent = parent
    
    local desc = Instance.new("TextLabel")
    desc.Size = UDim2.new(1, -10, 0, descHeight)
    desc.Position = UDim2.new(0, 5, 0, yPos + buttonHeight)
    desc.BackgroundTransparency = 1
    desc.TextColor3 = Color3.new(0.9, 0.9, 0.9)
    desc.Font = Enum.Font.SourceSans
    desc.TextSize = isMobile and 6 or 8
    desc.Text = mode[3]
    desc.Parent = parent
    
    button.MouseButton1Click:Connect(function()
        currentMode = index
        modeLabel.Text = mode[1]
    end)
    
    return spacing
end

function createToggleSetting(parent, text, description, yPos, color)
    local buttonHeight = isMobile and 22 or 28
    local descHeight = isMobile and 10 or 14
    local spacing = isMobile and 35 or 45
    
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(1, -10, 0, buttonHeight)
    toggle.Position = UDim2.new(0, 5, 0, yPos)
    toggle.BackgroundColor3 = color
    toggle.BorderSizePixel = 0
    toggle.TextColor3 = Color3.new(1, 1, 1)
    toggle.Font = Enum.Font.SourceSans
    toggle.TextSize = isMobile and 7 or 9
    toggle.Text = text .. ": OFF"
    toggle.Parent = parent
    
    local desc = Instance.new("TextLabel")
    desc.Size = UDim2.new(1, -10, 0, descHeight)
    desc.Position = UDim2.new(0, 5, 0, yPos + buttonHeight)
    desc.BackgroundTransparency = 1
    desc.TextColor3 = Color3.new(0.8, 0.8, 0.8)
    desc.Font = Enum.Font.SourceSans
    desc.TextSize = isMobile and 5 or 7
    desc.Text = description
    desc.Parent = parent
    
    toggle.MouseButton1Click:Connect(function()
        local currentText = toggle.Text
        if currentText:find("OFF") then
            toggle.Text = text .. ": ON"
            toggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
        else
            toggle.Text = text .. ": OFF"
            toggle.BackgroundColor3 = color
        end
    end)
    
    return spacing
end

-- Update Tab Display with PROPER SCROLLING
function updateTabDisplay()
    -- Update tab button colors
    for tabName, button in pairs(tabButtons) do
        button.BackgroundColor3 = tabName == currentTab and Color3.fromRGB(60, 60, 100) or Color3.fromRGB(40, 40, 40)
    end
    
    -- Clear previous content
    for _, child in ipairs(contentScrolling:GetChildren()) do
        child:Destroy()
    end
    
    local yPos = 5
    local totalHeight = 10

    if modeRanges[currentTab] then
        -- Mode-based tabs
        local startIdx, endIdx = modeRanges[currentTab][1], modeRanges[currentTab][2]
        local color = Color3.fromRGB(60, 60, 100)
        
        if currentTab == "Combat" then
            color = Color3.fromRGB(100, 60, 60)
        elseif currentTab == "Tech" then
            color = Color3.fromRGB(60, 100, 60)
        elseif currentTab == "Physics" then
            color = Color3.fromRGB(80, 60, 100)
        elseif currentTab == "Fun" then
            color = Color3.fromRGB(100, 60, 100)
        end
        
        for i = startIdx, endIdx do
            local spacing = createModeButton(contentScrolling, i, modes[i], yPos, color)
            yPos = yPos + spacing
            totalHeight = totalHeight + spacing
        end
        
    else
        -- Other tabs (Auto, Visual, Stealth, etc.)
        local settings = {
            {"Mobile Mode", "Optimized for phones"},
            {"Performance", "Better FPS"},
            {"Auto-Save", "Remember settings"},
            {"Touch Controls", "Mobile friendly"},
            {"Simple UI", "Clean interface"},
            {"Vibration", "Haptic feedback"},
            {"Screen Safe", "Stay on screen"},
            {"Quick Access", "Fast mode switch"}
        }
        
        for i, setting in ipairs(settings) do
            local spacing = createToggleSetting(contentScrolling, setting[1], setting[2], yPos, Color3.fromRGB(60, 60, 80))
            yPos = yPos + spacing
            totalHeight = totalHeight + spacing
        end
    end
    
    -- CRITICAL FIX: Set proper canvas size
    contentScrolling.CanvasSize = UDim2.new(0, 0, 0, totalHeight + 10)
    
    -- Reset scroll position
    contentScrolling.CanvasPosition = Vector2.new(0, 0)
end

-- Core Functions (same as before)
function getCurrentCharacter()
    return player.Character
end

function getHumanoidRootPart()
    local char = getCurrentCharacter()
    return char and char:FindFirstChild("HumanoidRootPart")
end

function rapidCameraFlick()
    if flicking then return end
    flicking = true
    
    local originalCFrame = camera.CFrame
    RunService:BindToRenderStep("RapidFlick", Enum.RenderPriority.Camera.Value + 1, function()
        if not flicking then return end
        local flick = CFrame.Angles(
            math.rad(math.random(-10, 10)),
            math.rad(math.random(-20, 20)), 
            math.rad(math.random(-10, 10))
        )
        camera.CFrame = originalCFrame * flick
    end)
    
    wait(0.08)
    flicking = false
    RunService:UnbindFromRenderStep("RapidFlick")
    camera.CFrame = originalCFrame
end

function abuseAngularVelocity()
    local hrp = getHumanoidRootPart()
    if not hrp or not active then return end
    
    rapidCameraFlick()
    
    local angularVel = modes[currentMode][2]
    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
    bodyAngularVelocity.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
    bodyAngularVelocity.P = 1e6
    bodyAngularVelocity.AngularVelocity = angularVel
    bodyAngularVelocity.Parent = hrp
    
    for i = 1, 6 do
        RunService.Heartbeat:Wait()
    end
    
    bodyAngularVelocity:Destroy()
    
    -- Apply velocity boost
    local lookVector = camera.CFrame.LookVector
    local boostPower = 80
    local boostDirection = lookVector * boostPower
    hrp.Velocity = hrp.Velocity + boostDirection
end

-- Toggle Button
toggleButton.MouseButton1Click:Connect(function()
    active = not active
    if active then
        toggleButton.Text = "DEACTIVATE"
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    else
        toggleButton.Text = "ACTIVATE"
        toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    end
end)

-- Input Handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Space and active then
        wait(0.05)
        abuseAngularVelocity()
    elseif input.KeyCode == Enum.KeyCode.RightBracket then
        currentMode = currentMode + 1
        if currentMode > #modes then currentMode = 1 end
        modeLabel.Text = modes[currentMode][1]
    elseif input.KeyCode == Enum.KeyCode.LeftBracket then
        currentMode = currentMode - 1
        if currentMode < 1 then currentMode = #modes end
        modeLabel.Text = modes[currentMode][1]
    end
end)

-- Character Handling
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")
    wait(1)
    screenGui.Parent = player:WaitForChild("PlayerGui")
end)

-- Jump Detection
coroutine.wrap(function()
    while true do
        local humanoid = getCurrentCharacter() and getCurrentCharacter():FindFirstChild("Humanoid")
        if humanoid and active then
            if humanoid:GetState() == Enum.HumanoidStateType.Jumping then
                abuseAngularVelocity()
                repeat
                    RunService.Heartbeat:Wait()
                until humanoid:GetState() ~= Enum.HumanoidStateType.Jumping or not getCurrentCharacter()
            end
        end
        RunService.Heartbeat:Wait()
    end
end)()

-- Initialize
updateTabDisplay()

print("Ultimate Angular Suite Loaded!")
print("Mobile Optimized: " .. tostring(isMobile))
print("195 Modes | 13 Tabs | Full Features")
print("Use Space to activate, ]/[ to cycle modes")
