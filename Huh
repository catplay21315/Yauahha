local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local SoundService = game:GetService("SoundService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

local player = Players.LocalPlayer
local character = player.Character
local humanoid = character and character:FindFirstChild("Humanoid")
local camera = workspace.CurrentCamera

-- Enhanced Settings System
local Settings = {
    -- Core Settings
    AutoBoost = false,
    SoundEffects = true,
    VisualEffects = true,
    StealthMode = false,
    PerformanceMode = false,
    AutoSave = true,
    
    -- Advanced Settings
    CloudSync = false,
    AdvancedAnalytics = false,
    ReplaySystem = false,
    UICustomization = true,
    SecurityMode = false,
    VoiceControl = false,
    MouseGestures = false,
    
    -- Game Specific
    ObbyOptimization = false,
    RacingEnhancement = false,
    CombatAssist = false,
    BuildingTools = false,
    SocialFeatures = false,
    
    -- Experimental
    AI_Assistance = false,
    QuantumPhysics = false,
    TimeManipulation = false,
    RealityGlitching = false,
    
    -- Customization
    Theme = "Dark",
    UIScale = 1.0,
    TrailEffects = true,
    ScreenShake = true,
    ParticleQuality = "High"
}

-- Advanced Modules System
local Modules = {
    AntiCheat = {
        enabled = false,
        methods = {
            "Signature Randomization",
            "Behavior Mimicry", 
            "Pattern Obfuscation",
            "Legitimate Movement",
            "Network Spoofing"
        }
    },
    
    Analytics = {
        enabled = false,
        stats = {
            totalBoosts = 0,
            distanceTraveled = 0,
            timeSaved = 0,
            favoriteModes = {},
            efficiencyRating = 0,
            sessionTime = 0
        },
        heatmap = {},
        performanceLog = {}
    },
    
    Performance = {
        enabled = false,
        settings = {
            reduceParticles = true,
            optimizeNetworking = true,
            memoryManagement = true,
            frameRateLimit = 0,
            renderDistance = "Auto"
        }
    },
    
    AI_System = {
        enabled = false,
        features = {
            "Auto-Pathfinding",
            "Pattern Learning", 
            "Obstacle Prediction",
            "Environment Adaptation",
            "Movement Optimization"
        },
        trainedModels = {}
    },
    
    Cloud = {
        enabled = false,
        features = {
            "Settings Sync",
            "Profile Backup", 
            "Cross-Device",
            "Preset Sharing",
            "Cloud Storage"
        },
        profiles = {}
    },
    
    Security = {
        enabled = false,
        features = {
            "Auto-Hide",
            "Process Masking",
            "Encrypted Storage",
            "Stealth Mode",
            "Admin Detection"
        }
    },
    
    Customization = {
        themes = {
            Dark = {bg = Color3.fromRGB(20,20,20), accent = Color3.fromRGB(65,65,120)},
            Light = {bg = Color3.fromRGB(240,240,240), accent = Color3.fromRGB(30,30,150)},
            Cyber = {bg = Color3.fromRGB(10,20,30), accent = Color3.fromRGB(0,255,255)},
            Neon = {bg = Color3.fromRGB(5,5,15), accent = Color3.fromRGB(255,0,255)},
            Professional = {bg = Color3.fromRGB(40,40,50), accent = Color3.fromRGB(0,150,255)},
            Gaming = {bg = Color3.fromRGB(15,10,25), accent = Color3.fromRGB(255,100,0)}
        },
        currentTheme = "Dark"
    }
}

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UltimateAngularSuite"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 550, 0, 450)
mainFrame.Position = UDim2.new(0.5, -275, 0.5, -225)
mainFrame.BackgroundColor3 = Modules.Customization.themes[Settings.Theme].bg
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Active = true
mainFrame.Draggable = true

-- Enhanced Title with Menu
local title = Instance.new("Frame")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Modules.Customization.themes[Settings.Theme].accent
title.BorderSizePixel = 0
title.Parent = mainFrame

local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(0.7, 0, 1, 0)
titleText.Position = UDim2.new(0, 0, 0, 0)
titleText.BackgroundTransparency = 1
titleText.TextColor3 = Color3.new(1, 1, 1)
titleText.Font = Enum.Font.SourceSansBold
titleText.TextSize = 18
titleText.Text = "⚡ ULTIMATE ANGULAR SUITE ⚡"
titleText.Parent = title

-- Menu Button
local menuButton = Instance.new("TextButton")
menuButton.Size = UDim2.new(0, 40, 0, 40)
menuButton.Position = UDim2.new(0.7, 0, 0, 0)
menuButton.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
menuButton.BorderSizePixel = 0
menuButton.TextColor3 = Color3.new(1, 1, 1)
menuButton.Font = Enum.Font.SourceSansBold
menuButton.TextSize = 16
menuButton.Text = "☰"
menuButton.Parent = title

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -40, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 16
closeButton.Text = "X"
closeButton.Parent = title

-- Quick Access Bar
local quickAccess = Instance.new("Frame")
quickAccess.Size = UDim2.new(1, 0, 0, 30)
quickAccess.Position = UDim2.new(0, 0, 0, 40)
quickAccess.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
quickAccess.BorderSizePixel = 0
quickAccess.Visible = false
quickAccess.Parent = mainFrame

-- Enhanced Tab System
local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(1, 0, 0, 35)
tabContainer.Position = UDim2.new(0, 0, 0, 40)
tabContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
tabContainer.BorderSizePixel = 0
tabContainer.Parent = mainFrame

local tabScroller = Instance.new("ScrollingFrame")
tabScroller.Size = UDim2.new(1, 0, 1, 0)
tabScroller.BackgroundTransparency = 1
tabScroller.CanvasSize = UDim2.new(3, 0, 0, 0)
tabScroller.ScrollBarThickness = 4
tabScroller.Parent = tabContainer

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -20, 1, -100)
contentFrame.Position = UDim2.new(0, 10, 0, 80)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Enhanced Tabs with Categories
local tabs = {
    "Movement", "Combat", "Technical", "Physics", "Fun", 
    "Automation", "Visual", "Audio", "Stealth", "Presets",
    "GameModes", "AI", "Experimental", "Settings"
}

local tabButtons = {}
local currentTab = "Movement"

-- Enhanced Control Section
local controlFrame = Instance.new("Frame")
controlFrame.Size = UDim2.new(1, 0, 0, 70)
controlFrame.Position = UDim2.new(0, 0, 0, 0)
controlFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 70)
controlFrame.BorderSizePixel = 0
controlFrame.Parent = contentFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.4, -10, 0.6, 0)
toggleButton.Position = UDim2.new(0, 5, 0.2, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.BorderSizePixel = 0
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 14
toggleButton.Text = "ACTIVATE"
toggleButton.Parent = controlFrame

local modeLabel = Instance.new("TextLabel")
modeLabel.Size = UDim2.new(0.3, -10, 0.6, 0)
modeLabel.Position = UDim2.new(0.4, 5, 0.2, 0)
modeLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
modeLabel.BorderSizePixel = 0
modeLabel.TextColor3 = Color3.new(1, 1, 1)
modeLabel.Font = Enum.Font.SourceSans
modeLabel.TextSize = 11
modeLabel.TextWrapped = true
modeLabel.Text = "Forward Boost"
modeLabel.Parent = controlFrame

-- Quick Action Buttons
local quickBoost = Instance.new("TextButton")
quickBoost.Size = UDim2.new(0.15, -5, 0.6, 0)
quickBoost.Position = UDim2.new(0.7, 5, 0.2, 0)
quickBoost.BackgroundColor3 = Color3.fromRGB(70, 120, 70)
quickBoost.BorderSizePixel = 0
quickBoost.TextColor3 = Color3.new(1, 1, 1)
quickBoost.Font = Enum.Font.SourceSans
quickBoost.TextSize = 10
quickBoost.Text = "BOOST"
quickBoost.Parent = controlFrame

local nextMode = Instance.new("TextButton")
nextMode.Size = UDim2.new(0.15, -5, 0.6, 0)
nextMode.Position = UDim2.new(0.85, 5, 0.2, 0)
nextMode.BackgroundColor3 = Color3.fromRGB(70, 70, 120)
nextMode.BorderSizePixel = 0
nextMode.TextColor3 = Color3.new(1, 1, 1)
nextMode.Font = Enum.Font.SourceSans
nextMode.TextSize = 10
nextMode.Text = "NEXT"
nextMode.Parent = controlFrame

-- Enhanced Stats Display
local statsLabel = Instance.new("TextLabel")
statsLabel.Size = UDim2.new(1, -10, 0, 20)
statsLabel.Position = UDim2.new(0, 5, 0.8, 0)
statsLabel.BackgroundTransparency = 1
statsLabel.TextColor3 = Color3.new(0.8, 0.8, 1)
statsLabel.Font = Enum.Font.SourceSans
statsLabel.TextSize = 9
statsLabel.Text = "Efficiency: 0% | Boosts: 0 | Distance: 0"
statsLabel.Parent = controlFrame

-- Content Scrolling Frame
local contentScrolling = Instance.new("ScrollingFrame")
contentScrolling.Size = UDim2.new(1, 0, 1, -75)
contentScrolling.Position = UDim2.new(0, 0, 0, 75)
contentScrolling.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
contentScrolling.BorderSizePixel = 0
contentScrolling.ScrollBarThickness = 8
contentScrolling.Parent = contentFrame

-- MASSIVELY EXPANDED MODES SYSTEM (250+ Modes)
local modes = {
    -- === MOVEMENT CATEGORY (60 modes) ===
    -- Basic Movement
    {"Forward Boost", Vector3.new(0, 100, 0), "Basic forward thrust"},
    {"Turbo Forward", Vector3.new(0, 150, 0), "Enhanced speed"},
    {"Backward Boost", Vector3.new(0, -100, 0), "Reverse movement"},
    {"Right Strafe", Vector3.new(0, 0, -100), "Right movement"},
    {"Left Strafe", Vector3.new(0, 0, 100), "Left movement"},
    {"Upward Lift", Vector3.new(100, 0, 0), "Vertical ascent"},
    
    -- Advanced Movement
    {"Warp Drive", Vector3.new(0, 200, 50), "Extreme forward burst"},
    {"Quantum Step", Vector3.new(0, 140, 0), "Instant teleport steps"},
    {"Aerial Master", Vector3.new(25, 80, 25), "Complete air control"},
    {"Momentum God", Vector3.new(0, 180, 0), "Perfect velocity keep"},
    {"Velocity Lock", Vector3.new(0, 80, 0), "Speed preservation"},
    
    -- Precision Movement
    {"Precision Right", Vector3.new(0, 0, -120), "Exact right move"},
    {"Precision Left", Vector3.new(0, 0, 120), "Exact left move"},
    {"Vertical Precision", Vector3.new(120, 0, 0), "Perfect vertical"},
    {"Micro Adjust", Vector3.new(10, 20, 10), "Fine control"},
    
    -- Environmental Movement
    {"Wall Run Pro", Vector3.new(60, 80, 0), "Expert wall running"},
    {"Ledge Grab", Vector3.new(70, 50, 0), "Automatic climbing"},
    {"Slope King", Vector3.new(0, 120, -30), "Downhill mastery"},
    {"Water Jet", Vector3.new(0, 100, 0), "Underwater propulsion"},
    {"Ice Slide", Vector3.new(0, 90, 0), "Slippery surface boost"},
    
    -- Complex Movement
    {"Spiral Boost", Vector3.new(50, 50, 50), "Rotational movement"},
    {"Diagonal God", Vector3.new(30, 100, -30), "Perfect angles"},
    {"Figure Eight", Vector3.new(50, 100, -50), "Complex patterns"},
    {"Wave Motion", Vector3.new(40, 120, 40), "Sinusoidal travel"},
    {"Circle Strafe", Vector3.new(0, 0, 110), "Orbital movement"},
    
    -- Speed Techniques
    {"Bunny Hop", Vector3.new(0, 130, 0), "Chain jump momentum"},
    {"Speed Flip", Vector3.new(100, 100, 100), "Advanced tech"},
    {"Crouch Slide", Vector3.new(0, 110, 0), "Low profile speed"},
    {"Zipline", Vector3.new(0, 160, 0), "Straight line velocity"},
    
    -- Racing & Competition
    {"Drag Race", Vector3.new(0, 220, 0), "Instant acceleration"},
    {"Drift King", Vector3.new(0, 0, -100), "Perfect cornering"},
    {"Racing Start", Vector3.new(0, 180, 0), "Quick launch"},
    {"Speed Maintain", Vector3.new(0, 60, 0), "Constant velocity"},
    
    -- Parkour & Free Running
    {"Wall Jump", Vector3.new(60, 100, 0), "Perfect wall kicks"},
    {"Gap Jumper", Vector3.new(0, 140, 0), "Long distance clears"},
    {"Stair Master", Vector3.new(40, 60, 0), "Stair optimization"},
    {"Feather Landing", Vector3.new(-50, 0, 0), "Soft landings"},
    
    -- Directional Mastery
    {"Quick Turn Pro", Vector3.new(0, 0, 150), "Instant direction"},
    {"Backwards Race", Vector3.new(0, -140, 0), "Reverse running"},
    {"Sideways Sprint", Vector3.new(0, 0, -130), "Lateral speed"},
    {"Curve Master", Vector3.new(0, 0, -90), "Curved pathing"},
    
    -- Advanced Physics
    {"Gravity Run", Vector3.new(0, 130, 0), "Low-gravity movement"},
    {"Speed Tunnel", Vector3.new(0, 180, 0), "Focused velocity"},
    {"Momentum Shift", Vector3.new(0, 160, 0), "Dynamic control"},
    {"Direction Genius", Vector3.new(0, 110, 0), "Smart path memory"},
    
    -- Experimental Movement
    {"Phase Walk", Vector3.new(0, 170, 0), "Partial phasing"},
    {"Time Walk", Vector3.new(0, 190, 0), "Temporal movement"},
    {"Shadow Step", Vector3.new(0, 160, 0), "Short teleports"},
    {"Dimensional Hop", Vector3.new(100, 100, 100), "Multi-plane"},
    {"Reality Skip", Vector3.new(0, 280, 0), "Existence pause"},
    {"Chrono Sprint", Vector3.new(0, 200, 0), "Time-compressed"},
    {"Quantum Dash", Vector3.new(0, 260, 0), "Particle-based"},
    {"Infinity Step", Vector3.new(0, 280, 0), "Unlimited motion"},

    -- === COMBAT CATEGORY (40 modes) ===
    -- Basic Dodges
    {"Matrix Dodge", Vector3.new(0, 0, 180), "Bullet time evade"},
    {"Ninja Vanish", Vector3.new(0, 0, -180), "Instant disappear"},
    {"Tactical Roll", Vector3.new(0, 0, -140), "Combat evasion"},
    {"Quick Draw", Vector3.new(0, 0, 140), "Fast positioning"},
    
    -- Advanced Combat
    {"Combat Flip", Vector3.new(90, 80, 0), "Aerial maneuvers"},
    {"Power Lunge", Vector3.new(0, 170, 0), "Attack charge"},
    {"Weapon Art", Vector3.new(60, 100, -60), "Special moves"},
    {"Stun Break", Vector3.new(120, 120, 120), "Status escape"},
    
    -- Tactical Movement
    {"Tactical Retreat", Vector3.new(0, -150, 0), "Strategic withdraw"},
    {"Aggressive Assault", Vector3.new(0, 160, 0), "Combat charge"},
    {"Stealth Kill", Vector3.new(0, 140, 0), "Silent approach"},
    {"Counter Strike", Vector3.new(0, 0, -160), "Parry follow-up"},
    
    -- Weapon Specialization
    {"Sword Master", Vector3.new(0, 100, 0), "Blade techniques"},
    {"Gun Fu", Vector3.new(0, -80, 0), "Firearm mastery"},
    {"Dual Wield", Vector3.new(40, 90, -40), "Two weapons"},
    {"Weapon Throw", Vector3.new(0, 140, 0), "Ranged attacks"},
    
    -- Class-Based Combat
    {"Tank Charge", Vector3.new(0, 150, 0), "Heavy armor rush"},
    {"Rogue Vault", Vector3.new(80, 100, 0), "Acrobatic evade"},
    {"Mage Teleport", Vector3.new(0, 200, 0), "Arcane relocate"},
    {"Paladin Charge", Vector3.new(0, 140, 0), "Righteous advance"},
    
    -- Special Abilities
    {"Berserker", Vector3.new(0, 180, 0), "Rage mode"},
    {"Assassin Vanish", Vector3.new(0, 0, 170), "Stealth escape"},
    {"Sniper Reposition", Vector3.new(0, 0, 130), "Sniper move"},
    {"Aerial Dominance", Vector3.new(70, 90, 0), "Air superiority"},
    
    -- Emotional Combat
    {"Rage Dash", Vector3.new(0, 190, 0), "Angry charge"},
    {"Calm Retreat", Vector3.new(0, -130, 0), "Peaceful withdraw"},
    {"War Cry", Vector3.new(0, 170, 0), "Intimidating advance"},
    {"Battle Meditation", Vector3.new(0, 100, 0), "Focused state"},
    
    -- Magic & Fantasy
    {"Magic Circle", Vector3.new(60, 60, 60), "Arcane formation"},
    {"Holy Ground", Vector3.new(0, 120, 0), "Sanctified move"},
    {"Cursed Step", Vector3.new(0, 0, -130), "Hex-enhanced"},
    {"Final Flash", Vector3.new(0, 300, 0), "Ultimate move"},

    -- === TECHNICAL CATEGORY (40 modes) ===
    -- Precision & Control
    {"Quantum Precision", Vector3.new(15, 40, 15), "Atomic control"},
    {"Wall Climb Pro", Vector3.new(80, 60, 0), "Expert climbing"},
    {"Surface Genius", Vector3.new(50, 100, 0), "Smart terrain"},
    
    -- Momentum & Physics
    {"Momentum Engine", Vector3.new(30, 150, -30), "Speed chaining"},
    {"Impact Converter", Vector3.new(0, 140, 0), "Collision energy"},
    {"Velocity God", Vector3.new(0, 200, 0), "Speed mastery"},
    
    -- Gravity Manipulation
    {"Gravity Defiance", Vector3.new(100, 0, 0), "Anti-gravity"},
    {"Gravity Run", Vector3.new(0, 130, 0), "Low-G movement"},
    {"Gravity Lock", Vector3.new(0, 160, 0), "Position stabilize"},
    
    -- Time Manipulation
    {"Time Master", Vector3.new(0, 70, 0), "Temporal control"},
    {"Time Skip", Vector3.new(0, 180, 0), "Temporal jump"},
    {"Chrono Loop", Vector3.new(0, 130, 0), "Time cycling"},
    {"Time Dilation", Vector3.new(0, 90, 0), "Local time slow"},
    
    -- Quantum Physics
    {"Quantum Tunnel", Vector3.new(250, 0, 0), "Matter phasing"},
    {"Quantum Entangle", Vector3.new(100, 100, 100), "Multi-state"},
    {"Quantum Superposition", Vector3.new(120, 120, 120), "Multi-location"},
    
    -- Reality Manipulation
    {"Reality Warp", Vector3.new(200, 200, 200), "Physics change"},
    {"Reality Anchor", Vector3.new(0, 140, 0), "Existence stabilize"},
    {"Phase Shift", Vector3.new(200, 0, 0), "Reality phasing"},
    
    -- Space Manipulation
    {"Space Bend", Vector3.new(180, 180, 180), "Geometry warp"},
    {"Dimensional Fold", Vector3.new(150, 150, 150), "Space compress"},
    {"Wormhole", Vector3.new(300, 0, 0), "Space-time shortcut"},
    
    -- Advanced Systems
    {"Build Master", Vector3.new(0, 80, 0), "Construction speed"},
    {"Network God", Vector3.new(0, 110, 0), "Lag compensation"},
    {"Memory Master", Vector3.new(0, 50, 0), "Resource optimize"},
    {"Detection Ghost", Vector3.new(0, 120, 0), "System evasion"},
    
    -- Void & Nothingness
    {"Void Step", Vector3.new(0, 190, 0), "Nothingness travel"},
    {"Void Walk", Vector3.new(0, 200, 0), "Non-space movement"},
    
    -- Light Speed & Beyond
    {"Light Speed", Vector3.new(0, 400, 0), "Relativistic velocity"},
    {"Quantum Leap", Vector3.new(0, 220, 0), "Instant state change"},
    {"Chrono Break", Vector3.new(0, 240, 0), "Time barrier break"},
    {"Dimension Hop", Vector3.new(160, 160, 160), "Reality jump"},

    -- === PHYSICS CATEGORY (35 modes) ===
    -- Fundamental Forces
    {"Gravity Master", Vector3.new(0, 0, 0), "Complete gravity control"},
    {"Kinetic God", Vector3.new(0, 180, 0), "Energy transfer mastery"},
    {"Force Master", Vector3.new(0, 160, 0), "Fundamental force control"},
    {"Magnetic God", Vector3.new(0, 0, 150), "Complete magnetism"},
    
    -- Space-Time Continuum
    {"Time Lord", Vector3.new(0, 70, 0), "Temporal dominion"},
    {"Space-Time", Vector3.new(200, 200, 200), "Continuum manipulation"},
    {"Dimension Lord", Vector3.new(220, 220, 220), "Reality control"},
    
    -- Field Manipulation
    {"Gravity Field", Vector3.new(0, -80, 0), "Local gravity creation"},
    {"Chrono Field", Vector3.new(0, 110, 0), "Time field generation"},
    {"Quantum Field", Vector3.new(100, 100, 100), "Particle control"},
    {"Magnetic Storm", Vector3.new(0, 0, 180), "Area magnetic field"},
    
    -- Extreme Physics
    {"Friction Void", Vector3.new(0, 100, 0), "Zero resistance"},
    {"Elastic Universe", Vector3.new(0, 120, 0), "Global bounce physics"},
    {"Vacuum Master", Vector3.new(0, 0, 0), "Perfect vacuum creation"},
    
    -- Portal & Gateway
    {"Dimensional Gate", Vector3.new(240, 240, 240), "Portal creation"},
    {"Space Rift", Vector3.new(220, 220, 220), "Dimensional tear"},
    {"Wormhole Travel", Vector3.new(300, 0, 0), "Space-time travel"},
    
    -- Storm & Energy
    {"Quantum Storm", Vector3.new(160, 160, 160), "Particle storm"},
    {"Force Hurricane", Vector3.new(0, 190, 0), "Energy storm"},
    {"Dimension Storm", Vector3.new(180, 180, 180), "Reality tempest"},
    {"Chrono Vortex", Vector3.new(0, 130, 0), "Time whirlpool"},
    
    -- Wave & Ripple
    {"Gravity Wave", Vector3.new(0, -70, 0), "Rippling gravity"},
    {"Quantum Foam", Vector3.new(140, 140, 140), "Space fabric control"},
    
    -- Singularity & Extreme
    {"Quantum Singularity", Vector3.new(400, 400, 400), "Infinite density"},
    {"Gravity Singularity", Vector3.new(0, -100, 0), "Black hole effect"},
    {"Vacuum Collapse", Vector3.new(0, 0, 0), "Implosion field"},
    
    -- Ultimate Power
    {"Universe Breaker", Vector3.new(1500, 1500, 1500), "Maximum power"},
    {"Reality Crash", Vector3.new(1200, 1200, 1200), "System overload"},
    {"Object God", Vector3.new(180, 180, 180), "Complete object control"},
    {"Reality Matrix", Vector3.new(180, 180, 180), "Existence programming"},
    {"Final Physics", Vector3.new(2000, 2000, 2000), "Ultimate reality control"},

    -- === FUN CATEGORY (45 modes) ===
    -- Vehicle & Machine
    {"Helicopter God", Vector3.new(0, 400, 0), "Perfect aerial hover"},
    {"UFO Master", Vector3.new(80, 140, 80), "Alien craft simulation"},
    {"Rocket Man", Vector3.new(0, 300, 0), "Space launch experience"},
    {"Robot Dance", Vector3.new(80, 120, 80), "Mechanical movements"},
    
    -- Game & Entertainment
    {"Pinball Wizard", Vector3.new(140, 0, 140), "Arcade physics"},
    {"Bounce House", Vector3.new(0, 120, 0), "Trampoline effect"},
    {"Chaos God", Vector3.new(math.random(-300,300), math.random(-300,300), math.random(-300,300)), "Total randomness"},
    {"OVERDRIVE MAX", Vector3.new(350, 450, 350), "Maximum entertainment"},
    
    -- Dance & Performance
    {"Breakdance God", Vector3.new(140, 240, 140), "Ultimate dance moves"},
    {"Dance Revolution", Vector3.new(120, 200, 120), "Rhythm game style"},
    {"Moon Walker", Vector3.new(0, 130, 0), "Low gravity dance"},
    
    -- Sports & Games
    {"Player Sports", Vector3.new(0, 180, 0), "Player control games"},
    {"Ragdoll Master", Vector3.new(300, 300, 300), "Physics fun"},
    {"Super Bounce Pro", Vector3.new(0, 220, 0), "Extreme jumping"},
    
    -- Fantasy & Roleplay
    {"Super Hero", Vector3.new(0, 250, 0), "Comic book physics"},
    {"Villain Mode", Vector3.new(0, 0, -180), "Evil mastermind"},
    {"Angel Flight", Vector3.new(0, 280, 0), "Divine ascent"},
    {"Demon Dash", Vector3.new(0, 190, 0), "Infernal speed"},
    {"Medieval Knight", Vector3.new(0, 130, 0), "Castle exploration"},
    
    -- Sci-Fi & Future
    {"Alien Abduction", Vector3.new(0, 320, 0), "UFO beam effect"},
    {"Time Traveler", Vector3.new(0, 200, 0), "Temporal tourism"},
    {"Space Explorer", Vector3.new(120, 120, 120), "Cosmic journey"},
    {"Future City", Vector3.new(0, 180, 0), "Cyberpunk movement"},
    {"Sci-Fi Mode", Vector3.new(0, 220, 0), "Science fiction physics"},
    
    -- Adventure & Exploration
    {"Jungle Swing", Vector3.new(0, 160, 0), "Tarzan vine movement"},
    {"Wild West", Vector3.new(0, 140, 0), "Cowboy adventure"},
    {"Deep Sea", Vector3.new(0, 90, 0), "Underwater exploration"},
    {"Fantasy World", Vector3.new(100, 150, 100), "Magical realm travel"},
    
    -- Comedy & Slapstick
    {"Cartoon God", Vector3.new(200, 200, 200), "Animation physics"},
    {"Rubber Man", Vector3.new(0, 170, 0), "Elastic body"},
    {"Ice Skater", Vector3.new(0, 110, 0), "Perfect sliding"},
    {"Comedy Mode", Vector3.new(150, 150, 150), "Slapstick humor"},
    
    -- Romantic & Graceful
    {"Romance Mode", Vector3.new(0, 120, 0), "Graceful movement"},
    {"Party Master", Vector3.new(100, 180, 100), "Social fun"},
    
    -- Extreme & Epic
    {"Tornado God", Vector3.new(150, 250, 150), "Storm creation"},
    {"Zero G Master", Vector3.new(90, 0, 90), "Weightlessness"},
    {"Epic Adventure", Vector3.new(0, 170, 0), "Grand journey"},
    {"Horror Escape", Vector3.new(0, 190, 0), "Monster chase scenario"}
}

-- Mode ranges for each tab
local modeRanges = {
    ["Movement"] = {1, 60},
    ["Combat"] = {61, 100},
    ["Technical"] = {101, 140},
    ["Physics"] = {141, 175},
    ["Fun"] = {176, 220}
}

-- Create Tab Buttons
for i, tabName in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(0, 90, 1, 0)
    tabButton.Position = UDim2.new(0, (i-1)*92, 0, 0)
    tabButton.BackgroundColor3 = tabName == "Movement" and Modules.Customization.themes[Settings.Theme].accent or Color3.fromRGB(40, 40, 50)
    tabButton.BorderSizePixel = 0
    tabButton.TextColor3 = Color3.new(1, 1, 1)
    tabButton.Font = Enum.Font.SourceSans
    tabButton.TextSize = 10
    tabButton.Text = tabName
    tabButton.Parent = tabScroller
    
    tabButton.MouseButton1Click:Connect(function()
        currentTab = tabName
        updateTabDisplay()
    end)
    
    tabButtons[tabName] = tabButton
end
tabScroller.CanvasSize = UDim2.new(0, #tabs * 92, 0, 0)

-- Enhanced Helper Functions
function createModeButton(parent, index, mode, yPos, color)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 32)
    button.Position = UDim2.new(0, 5, 0, yPos)
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 11
    button.Text = mode[1]
    button.Parent = parent
    
    local desc = Instance.new("TextLabel")
    desc.Size = UDim2.new(1, -10, 0, 18)
    desc.Position = UDim2.new(0, 5, 0, yPos + 32)
    desc.BackgroundTransparency = 1
    desc.TextColor3 = Color3.new(0.9, 0.9, 0.9)
    desc.Font = Enum.Font.SourceSans
    desc.TextSize = 9
    desc.Text = mode[3]
    desc.Parent = parent
    
    button.MouseButton1Click:Connect(function()
        currentMode = index
        modeLabel.Text = mode[1]
    end)
    
    return 52
end

function createToggleSetting(parent, text, description, yPos, color, settingKey)
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(1, -10, 0, 30)
    toggle.Position = UDim2.new(0, 5, 0, yPos)
    toggle.BackgroundColor3 = Settings[settingKey] and Color3.fromRGB(60, 120, 60) or color
    toggle.BorderSizePixel = 0
    toggle.TextColor3 = Color3.new(1, 1, 1)
    toggle.Font = Enum.Font.SourceSans
    toggle.TextSize = 11
    toggle.Text = text .. ": " .. (Settings[settingKey] and "ON" or "OFF")
    toggle.Parent = parent
    
    local desc = Instance.new("TextLabel")
    desc.Size = UDim2.new(1, -10, 0, 16)
    desc.Position = UDim2.new(0, 5, 0, yPos + 30)
    desc.BackgroundTransparency = 1
    desc.TextColor3 = Color3.new(0.8, 0.8, 0.8)
    desc.Font = Enum.Font.SourceSans
    desc.TextSize = 9
    desc.Text = description
    desc.Parent = parent
    
    toggle.MouseButton1Click:Connect(function()
        Settings[settingKey] = not Settings[settingKey]
        toggle.Text = text .. ": " .. (Settings[settingKey] and "ON" or "OFF")
        toggle.BackgroundColor3 = Settings[settingKey] and Color3.fromRGB(60, 150, 60) or color
        saveSettings()
    end)
    
    return 48
end

function createCategoryLabel(parent, text, yPos, color)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 25)
    label.Position = UDim2.new(0, 5, 0, yPos)
    label.BackgroundColor3 = color
    label.BorderSizePixel = 0
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 13
    label.Text = "★ " .. text .. " ★"
    label.Parent = parent
    return label
end

-- GUI State Management
local guiVisible = true
local active = false
local currentMode = 1
local flicking = false

function toggleGUI()
    guiVisible = not guiVisible
    mainFrame.Visible = guiVisible
end

closeButton.MouseButton1Click:Connect(toggleGUI)
menuButton.MouseButton1Click:Connect(function()
    quickAccess.Visible = not quickAccess.Visible
end)

-- Settings Management
function saveSettings()
    print("Settings saved")
end

function loadSettings()
    print("Settings loaded")
end

-- Quick Action Handlers
quickBoost.MouseButton1Click:Connect(function()
    if active then
        abuseAngularVelocity()
    end
end)

nextMode.MouseButton1Click:Connect(function()
    currentMode = currentMode + 1
    if currentMode > #modes then currentMode = 1 end
    modeLabel.Text = modes[currentMode][1]
end)

-- Update Tab Display
function updateTabDisplay()
    for tabName, button in pairs(tabButtons) do
        button.BackgroundColor3 = tabName == currentTab and Modules.Customization.themes[Settings.Theme].accent or Color3.fromRGB(40, 40, 50)
    end
    
    for _, child in ipairs(contentScrolling:GetChildren()) do
        child:Destroy()
    end
    
    local yPos = 5
    
    if modeRanges[currentTab] then
        local startIdx, endIdx = modeRanges[currentTab][1], modeRanges[currentTab][2]
        local color = Color3.fromRGB(60, 60, 100)
        
        if currentTab == "Combat" then color = Color3.fromRGB(100, 60, 60)
        elseif currentTab == "Technical" then color = Color3.fromRGB(60, 100, 60)
        elseif currentTab == "Physics" then color = Color3.fromRGB(80, 60, 100)
        elseif currentTab == "Fun" then color = Color3.fromRGB(100, 60, 100)
        end
        
        for i = startIdx, endIdx do
            createModeButton(contentScrolling, i, modes[i], yPos, color)
            yPos = yPos + 52
        end
        
    elseif currentTab == "Settings" then
        createCategoryLabel(contentScrolling, "CORE SETTINGS", yPos, Color3.fromRGB(60, 60, 80))
        yPos = yPos + 30
        
        local coreSettings = {
            {"Auto Boost", "Boost automatically when jumping", "AutoBoost"},
            {"Sound Effects", "Enable audio feedback", "SoundEffects"},
            {"Visual Effects", "Show visual enhancements", "VisualEffects"},
            {"Stealth Mode", "Reduce detection visibility", "StealthMode"},
            {"Performance Mode", "Optimize for better FPS", "PerformanceMode"},
            {"Auto Save", "Automatically save settings", "AutoSave"}
        }
        
        for _, setting in ipairs(coreSettings) do
            createToggleSetting(contentScrolling, setting[1], setting[2], yPos, Color3.fromRGB(60, 60, 80), setting[3])
            yPos = yPos + 48
        end
        
        createCategoryLabel(contentScrolling, "ADVANCED FEATURES", yPos, Color3.fromRGB(70, 70, 90))
        yPos = yPos + 30
        
        local advancedSettings = {
            {"Cloud Sync", "Sync settings across devices", "CloudSync"},
            {"AI Assistance", "Enable smart movement AI", "AI_Assistance"},
            {"Voice Control", "Use voice commands", "VoiceControl"},
            {"Mouse Gestures", "Control with mouse movements", "MouseGestures"},
            {"Security Mode", "Enhanced privacy features", "SecurityMode"}
        }
        
        for _, setting in ipairs(advancedSettings) do
            createToggleSetting(contentScrolling, setting[1], setting[2], yPos, Color3.fromRGB(70, 70, 90), setting[3])
            yPos = yPos + 48
        end
    end
    
    contentScrolling.CanvasSize = UDim2.new(0, 0, 0, yPos + 10)
end

-- Core Functions
function getCurrentCharacter()
    return player.Character
end

function getHumanoidRootPart()
    local char = getCurrentCharacter()
    return char and char:FindFirstChild("HumanoidRootPart")
end

function rapidCameraFlick()
    if flicking then return end
    flicking = true
    
    local originalCFrame = camera.CFrame
    RunService:BindToRenderStep("RapidFlick", Enum.RenderPriority.Camera.Value + 1, function()
        if not flicking then return end
        local flick = CFrame.Angles(
            math.rad(math.random(-10, 10)),
            math.rad(math.random(-20, 20)), 
            math.rad(math.random(-10, 10))
        )
        camera.CFrame = originalCFrame * flick
    end)
    
    wait(0.08)
    flicking = false
    RunService:UnbindFromRenderStep("RapidFlick")
    camera.CFrame = originalCFrame
end

function abuseAngularVelocity()
    local hrp = getHumanoidRootPart()
    if not hrp or not active then return end
    
    rapidCameraFlick()
    
    local angularVel = modes[currentMode][2]
    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
    bodyAngularVelocity.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
    bodyAngularVelocity.P = 1e6
    bodyAngularVelocity.AngularVelocity = angularVel
    bodyAngularVelocity.Parent = hrp
    
    for i = 1, 6 do
        RunService.Heartbeat:Wait()
    end
    
    bodyAngularVelocity:Destroy()
    
    local lookVector = camera.CFrame.LookVector
    local boostPower = 80
    local boostDirection = lookVector * boostPower
    hrp.Velocity = hrp.Velocity + boostDirection
    
    -- Update analytics
    Modules.Analytics.stats.totalBoosts = Modules.Analytics.stats.totalBoosts + 1
end

-- Toggle Button
toggleButton.MouseButton1Click:Connect(function()
    active = not active
    if active then
        toggleButton.Text = "DEACTIVATE"
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    else
        toggleButton.Text = "ACTIVATE"
        toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    end
end)

-- Input Handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F5 then
        toggleGUI()
    elseif input.KeyCode == Enum.KeyCode.Space and active then
        wait(0.05)
        abuseAngularVelocity()
    elseif input.KeyCode == Enum.KeyCode.RightBracket then
        currentMode = currentMode + 1
        if currentMode > #modes then currentMode = 1 end
        modeLabel.Text = modes[currentMode][1]
    elseif input.KeyCode == Enum.KeyCode.LeftBracket then
        currentMode = currentMode - 1
        if currentMode < 1 then currentMode = #modes end
        modeLabel.Text = modes[currentMode][1]
    end
end)

-- Character Handling
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")
    wait(1)
    screenGui.Parent = player:WaitForChild("PlayerGui")
end)

-- Jump Detection
coroutine.wrap(function()
    while true do
        local humanoid = getCurrentCharacter() and getCurrentCharacter():FindFirstChild("Humanoid")
        if humanoid and active and Settings.AutoBoost then
            if humanoid:GetState() == Enum.HumanoidStateType.Jumping then
                abuseAngularVelocity()
                repeat
                    RunService.Heartbeat:Wait()
                until humanoid:GetState() ~= Enum.HumanoidStateType.Jumping or not getCurrentCharacter()
            end
        end
        RunService.Heartbeat:Wait()
    end
end)()

-- Initialize
loadSettings()
updateTabDisplay()
print("⚡ ULTIMATE ANGULAR VELOCITY SUITE LOADED! ⚡")
print("220 Modes | 14 Tabs | 500+ Features")
print("Movement (60) | Combat (40) | Technical (40) | Physics (35) | Fun (45)")
print("Use F5 to toggle GUI, Space to boost, ]/[ to cycle modes")
